##! Detects "Bad Neighbor". CVE-2020-16898 and CVE-2020-16899

@load base/frameworks/notice

@load ./consts.zeek

module BadNeighbor;

export {
	redef enum Notice::Type += {
		## IPv6 Router Advertisement packet seen with the Recursive
		## DNS Server Option that had length which could cause a
		## buffer overflow and can lead to code execution.
		Bad_Neighbor_RCE_Attack_Detected,
		## IPv6 Router Advertisement packet seen with the DNS Search
		## List Option that had a length which will cause a buffer
		## overflow and can lead to a Denial of Service.
		Bad_Neighbor_DoS_Attack_Detected,
	};
}

event icmp_router_advertisement(c: connection, icmp: icmp_conn, cur_hop_limit: count, managed: bool, other: bool,
                                home_agent: bool, pref: count, proxy: bool, rsv: count, router_lifetime: interval,
                                reachable_time: interval, retrans_timer: interval, options: icmp6_nd_options)
	{
	for ( i in options )
		{
		if ( options[i]?$otype && options[i]$otype in vulnerable_option_types && options[i]?$len && options[i]?$payload )
			{
			if ( vulnerable_option_types[options[i]$otype] == "Recursive DNS Server Option" )
				{
				# To trigger this, the value must be even and greater than 3
				if ( options[i]$len > 3 && options[i]$len % 2 == 0 )
					NOTICE([$note=Bad_Neighbor_RCE_Attack_Detected, $src=c$id$orig_h,
					        $msg=fmt("Length=%d, payload length=%d", options[i]$len, |options[i]$payload|),
					        $sub=options[i]$payload, $identifier=cat(c$id$orig_h, c$id$resp_h)]);
				}

			if ( vulnerable_option_types[options[i]$otype] == "DNS Search List Option" )
				{
				# To trigger this, the length field and payload length must exceed a minimum.
				if ( options[i]$len >= 35 && |options[i]$payload| >= 264 )
					NOTICE([$note=Bad_Neighbor_DoS_Attack_Detected, $src=c$id$orig_h,
					        $msg=fmt("Length=%d, payload length=%d", options[i]$len, |options[i]$payload|),
					        $sub=options[i]$payload, $identifier=cat(c$id$orig_h, c$id$resp_h)]);
				}
			}
		}
	}
